// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5265.steamwiffle;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.NidecBrushless;
import edu.wpi.first.wpilibj.PowerDistributionPanel;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    
	public static SpeedController chassisSpeedController0; // Front Left
    public static SpeedController chassisSpeedController1; // Front Right
    public static SpeedController chassisSpeedController2; // Rear Right
    public static SpeedController chassisSpeedController3; // Rear Left
    public static AnalogPotentiometer pot;
    public static PowerDistributionPanel chassisPowerDistributionPanel1;
    public static DigitalInput limiterTop;
    public static DigitalInput limiterBottom;
    public static SpeedController brushless;
    public static NidecBrushless arm;
    public static DoubleSolenoid airDoubleSolenoid1 = new DoubleSolenoid(0,1);
    	
   
    
    public static void init() {
        // declare our Victors, in a clockwise direction across the front and then the back,
    	// as if you were sitting in the center of the robot
    	// 0 intake 1
    	// x xxxxxx x
    	// x xxxxxx x
    	// 3 xgearx 2
    	chassisSpeedController0 = new Victor(0); // Front Left
        
        chassisSpeedController1 = new Victor(1); // Front Right
        
        chassisSpeedController2 = new Victor(2); // Rear Right
        
        chassisSpeedController3 = new Victor(3); // Rear Left
       
        
        pot = new AnalogPotentiometer(3);
       
        
        limiterTop = new DigitalInput(0);
        limiterBottom = new DigitalInput(1);
     
        brushless = new Victor (4);
        
        arm = new NidecBrushless(9,9);
        arm.enable();
        
        airDoubleSolenoid1.set(DoubleSolenoid.Value.kOff);
        

    }
}
