// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5265.steamwiffle.commands;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc5265.steamwiffle.Robot;

/**
 *
 */
public class AutonomousCommand extends Command {
<<<<<<< HEAD
	

=======
	private double x_speed = 0;
	private double y_speed = 0;
	private double twist = 0;
	private double time = 3;
>>>>>>> master

   
    public AutonomousCommand() {
    	requires(Robot.chassis);

<<<<<<< HEAD


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
=======
    	setTimeout(time);
    	
>>>>>>> master


    }

    // Called just before this Command runs the first time
    protected void initialize() {
<<<<<<< HEAD
  
    	
    	
    	
=======

    	Robot.chassis.driveChassisSteering(x_speed, y_speed, twist);

>>>>>>> master
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	//Robot.chassis.driveChassisSteering(x_speed, y_speed, twist);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return isTimedOut();
    }

    // Called once after isFinished returns true
    protected void end() {
    	// stop motion
    	Robot.chassis.driveChassisSteering(0, 0, 0);
        
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
